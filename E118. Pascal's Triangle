class Solution:
    def generate(self, numRows: int) -> List[List[int]]:
        if numRows==1:
            return [[1]]
        if numRows==2:
            return [[1],[1,1]]
        res = [[1],[1,1]]
        test = 3
        while test<=numRows:
            l = [0]*test
            for i in range(len(l)):
                if i==0 or i==(len(l)-1):
                    l[0], l[-1]= 1, 1
                else:
                    l[i] = res[test-2][i-1] + res[test-2][i]
            res.append(l)
            test +=1
        return res
 //
 Runtime: 33 ms, faster than 83.02% of Python3 online submissions for Pascal's Triangle.
Memory Usage: 14 MB, less than 17.78% of Python3 online submissions for Pascal's Triangle.
